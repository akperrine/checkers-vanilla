{"version":3,"sources":["src/index.ts"],"names":[],"mappings":"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","file":"src.f10117fe.js","sourceRoot":"..","sourcesContent":["const table = document.querySelector(\"#table\");\nconst scoreBox = document.querySelector(\".score-box\");\n\nlet gameOver = false;\nlet redTurn = true;\nlet scoreBlack = 0;\nlet scoreRed = 0;\nlet selected = NaN;\nlet board = [\n  [0, 1, 0, 1, 0, 1, 0, 1],\n  [1, 0, 1, 0, 1, 0, 1, 0],\n  [0, 1, 0, 1, 0, 1, 0, 1],\n  [0, 0, 0, 0, 0, 0, 0, 0],\n  [0, 0, 0, 0, 0, 0, 0, 0],\n  [-1, 0, -1, 0, -1, 0, -1, 0],\n  [0, -1, 0, -1, 0, -1, 0, -1],\n  [-1, 0, -1, 0, -1, 0, -1, 0],\n];\n\n// only works because checkers never goes to zero box\nlet mustMove: boolean | number = false;\nlet selectedSquare: null | HTMLElement = null;\n\nfunction updateScore() {\n  if (scoreBox) {\n    return (scoreBox.innerHTML = `\n    <span>Black Pieces: ${scoreBlack}</span>\n    <span>Red Pieces: ${scoreRed}</span>\n    `);\n  }\n}\n\nfunction boardNumberToMatrix(boardNumber: number): number[] {\n  const firstArrayIndex = Math.floor(boardNumber / 8);\n  const secondArrayIndex = boardNumber % 8;\n  return [firstArrayIndex, secondArrayIndex];\n}\n\nfunction checkArrayValue(checkerId: number): number {\n  const coords = boardNumberToMatrix(checkerId);\n  return board[coords[0]][coords[1]];\n}\n\n// function clickablePiece() {\n   document.querySelectorAll(\".checker\").forEach((piece: Element) => {\n    // if (pieceWithChecker) {\n    piece.addEventListener(\"click\", (event) => {\n      if (event.target) {\n        const target = event.target as HTMLDivElement;\n        const pieceWithChecker = piece.hasChildNodes();\n        // check if square clicked is highlighted\n        if (!mustMove) {\n          if (event.target.classList.contains(\"highlight\")) {\n            const boardNumber = parseInt(piece.id);\n            const highlightedCoords = boardNumberToMatrix(boardNumber);\n            let selectedCoords = boardNumberToMatrix(selected);\n            const rowDifference = highlightedCoords[0] - selectedCoords[0];\n            \n            // remove skipped piece\n            // check if pieced skipped down\n            if (rowDifference === 2) {\n              // check if piece moved down and RIGHT\n              if (highlightedCoords[1] > selectedCoords[1]) {\n                const skippedPieceId = (selected + 9).toString();\n                const skippedPieceMatrix = boardNumberToMatrix(selected + 9);\n                const skippedSquare = document.getElementById(skippedPieceId);\n                if (skippedSquare) {\n                  board[skippedPieceMatrix[0]][skippedPieceMatrix[1]] = 0;\n                  skippedSquare.innerHTML = ``;\n                }\n              }\n              // check if piece moved down and LEFT\n              if (highlightedCoords[1] < selectedCoords[1]) {\n                const skippedPieceId = (selected + 7).toString();\n                const skippedPieceMatrix = boardNumberToMatrix(selected + 7);\n                const skippedSquare = document.getElementById(skippedPieceId);\n                if (skippedSquare) {\n                  board[skippedPieceMatrix[0]][skippedPieceMatrix[1]] = 0;\n                  skippedSquare.innerHTML = ``;\n                }\n              }\n            }\n            // check if piece moved up\n            if (rowDifference === -2) {\n              // check if piece moved up and RIGHT\n              if (highlightedCoords[1] > selectedCoords[1]) {\n                const skippedPieceId = (selected - 7).toString();\n                const skippedPieceMatrix = boardNumberToMatrix(selected - 7);\n                const skippedSquare = document.getElementById(skippedPieceId);\n                if (skippedSquare) {\n                  board[skippedPieceMatrix[0]][skippedPieceMatrix[1]] = 0;\n                  skippedSquare.innerHTML = ``;\n                }\n              }\n              // check if piece moved up and LEFT\n              if (highlightedCoords[1] < selectedCoords[1]) {\n                const skippedPieceId = (selected - 9).toString();\n                const skippedPieceMatrix = boardNumberToMatrix(selected - 9);\n                const skippedSquare = document.getElementById(skippedPieceId);\n                if (skippedSquare) {\n                  board[skippedPieceMatrix[0]][skippedPieceMatrix[1]] = 0;\n                  skippedSquare.innerHTML = ``;\n                }\n              }\n            }\n\n            //check if now king\n            const selctedCell = document.getElementById(selected.toString());\n            const pieceColorNumber = checkArrayValue(selected);\n            if (\n              (pieceColorNumber === 1 && highlightedCoords[0] === 7) ||\n              (pieceColorNumber === -1 && highlightedCoords[0] === 0) ||\n              selctedCell?.children[0].classList.contains(\"king\")\n            ) {\n              target.innerHTML = `<div class=\"piece king ${\n                pieceColorNumber === 1 ? \"red\" : \"black\"\n              }-piece\"></div>`;\n              console.log(target);\n            }\n\n            // update board array to proper values\n            board[highlightedCoords[0]][highlightedCoords[1]] =\n              checkArrayValue(selected);\n            board[selectedCoords[0]][selectedCoords[1]] = 0;\n\n            \n\n            //check if still a move left\n            document.querySelectorAll(\".highlight\").forEach((square) => {\n              square.classList.remove(\"highlight\");\n            });\n\n            const checkerValue = checkArrayValue(boardNumber);\n            if (rowDifference === 2 || rowDifference === -2) {\n              console.log('check next move normal');\n              checkContinuedMove(\n                highlightedCoords[0],\n                highlightedCoords[1],\n                checkerValue\n              );\n            }\n\n            // update selected cell to be empty\n            if (selctedCell) {\n              selctedCell.innerHTML = ``;\n            }\n\n            selected = NaN;\n            redTurn = !redTurn;\n\n            setCheckerBoard();\n          } else if (pieceWithChecker) {\n            console.log('standard check move');\n            const boardNumber = parseInt(piece.id);\n            const checkerValue = checkArrayValue(boardNumber);\n            const xCoord = boardNumberToMatrix(boardNumber)[0];\n            const yCoord = boardNumberToMatrix(boardNumber)[1];\n            if (redTurn && checkerValue === 1) {\n              selected = boardNumber;\n\n              moveChoice(xCoord, yCoord, target, checkerValue);\n            }\n            if (!redTurn && checkerValue === -1) {\n              selected = boardNumber;\n              moveChoice(xCoord, yCoord, target, checkerValue);\n            }\n          }\n        } else {\n          if (event.target.classList.contains(\"highlight\")) {\n            selected = mustMove\n            if (event.target.classList.contains(\"highlight\")) {\n              const boardNumber = parseInt(piece.id);\n              const highlightedCoords = boardNumberToMatrix(boardNumber);\n              let selectedCoords = boardNumberToMatrix(selected);\n              const rowDifference = highlightedCoords[0] - selectedCoords[0];\n              \n              // remove skipped piece\n              // check if pieced skipped down\n              if (rowDifference === 2) {\n                // check if piece moved down and RIGHT\n                if (highlightedCoords[1] > selectedCoords[1]) {\n                  const skippedPieceId = (selected + 9).toString();\n                  const skippedPieceMatrix = boardNumberToMatrix(selected + 9);\n                  const skippedSquare = document.getElementById(skippedPieceId);\n                  if (skippedSquare) {\n                    board[skippedPieceMatrix[0]][skippedPieceMatrix[1]] = 0;\n                    skippedSquare.innerHTML = ``;\n                  }\n                }\n                // check if piece moved down and LEFT\n                if (highlightedCoords[1] < selectedCoords[1]) {\n                  const skippedPieceId = (selected + 7).toString();\n                  const skippedPieceMatrix = boardNumberToMatrix(selected + 7);\n                  const skippedSquare = document.getElementById(skippedPieceId);\n                  if (skippedSquare) {\n                    board[skippedPieceMatrix[0]][skippedPieceMatrix[1]] = 0;\n                    skippedSquare.innerHTML = ``;\n                  }\n                }\n              }\n              // check if piece moved up\n              if (rowDifference === -2) {\n                // check if piece moved up and RIGHT\n                if (highlightedCoords[1] > selectedCoords[1]) {\n                  const skippedPieceId = (selected - 7).toString();\n                  const skippedPieceMatrix = boardNumberToMatrix(selected - 7);\n                  const skippedSquare = document.getElementById(skippedPieceId);\n                  if (skippedSquare) {\n                    board[skippedPieceMatrix[0]][skippedPieceMatrix[1]] = 0;\n                    skippedSquare.innerHTML = ``;\n                  }\n                }\n                // check if piece moved up and LEFT\n                if (highlightedCoords[1] < selectedCoords[1]) {\n                  const skippedPieceId = (selected - 9).toString();\n                  const skippedPieceMatrix = boardNumberToMatrix(selected - 9);\n                  const skippedSquare = document.getElementById(skippedPieceId);\n                  if (skippedSquare) {\n                    board[skippedPieceMatrix[0]][skippedPieceMatrix[1]] = 0;\n                    skippedSquare.innerHTML = ``;\n                  }\n                }\n              }\n  \n              //check if now king\n              const selctedCell = document.getElementById(selected.toString());\n              const pieceColorNumber = checkArrayValue(selected);\n              if (\n                (pieceColorNumber === 1 && highlightedCoords[0] === 7) ||\n                (pieceColorNumber === -1 && highlightedCoords[0] === 0) ||\n                selctedCell?.children[0].classList.contains(\"king\")\n              ) {\n                target.innerHTML = `<div class=\"piece king ${\n                  pieceColorNumber === 1 ? \"red\" : \"black\"\n                }-piece\"></div>`;\n              }\n  \n              // update board array to proper values\n              board[highlightedCoords[0]][highlightedCoords[1]] =\n                checkArrayValue(selected);\n              board[selectedCoords[0]][selectedCoords[1]] = 0;\n  \n             \n              //check if still a move left\n              document.querySelectorAll(\".highlight\").forEach((square) => {\n                square.classList.remove(\"highlight\");\n              });\n              setCheckerBoard()\n  \n              const checkerValue = checkArrayValue(boardNumber);\n              mustMove = false\n              if (rowDifference === 2 || rowDifference === -2) {\n                console.log('checking if next move');\n                checkContinuedMove(\n                  highlightedCoords[0],\n                  highlightedCoords[1],\n                  checkerValue\n                );\n              }         \n              \n               // update selected cell to be empty\n               console.log(selected.toString());\n               if (selctedCell) {\n                 console.log(selctedCell);\n                 selctedCell.innerHTML = ``;\n               }\n              selected = NaN;\n              scoreBlack = 0;\n              scoreRed = 0;\n          }\n        }\n      }\n\n     \n    });\n    // }\n  });\n// }\n\nfunction setCheckerBoard(): void {\n  scoreBlack = 0\n  scoreRed = 0\n  for (let i = 0; i < 8; i++) {\n    for (let j = 0; j < 8; j++) {\n      if (board[i][j] === 1) {\n        setCheckerSquare(i, j, \"red\");\n        scoreRed++;\n      } else if (board[i][j] === -1) {\n        setCheckerSquare(i, j, \"black\");\n        scoreBlack++;\n      }\n    }\n  }\n \n  updateScore();\n}\n\n\nfunction arrayCoordinatesToId(y: number, x: number): string {\n  return (y * 8 + x).toString();\n}\n\nfunction setCheckerSquare(indexY: number, indexX: number, color: string): void {\n  const idNumber = arrayCoordinatesToId(indexY, indexX);\n  const currentCell = document.getElementById(idNumber);\n  if (currentCell) {\n    if (currentCell.children[0]) {\n      if (currentCell.children[0].classList.contains(\"king\")) {\n        currentCell.innerHTML = ``;\n        currentCell.innerHTML = `<div class=\"piece king ${color}-piece\"></div>`;\n      }\n    } else {\n      currentCell.innerHTML = ``;\n      currentCell.innerHTML = `<div class=\"piece ${color}-piece\"></div>`;\n    }\n  }\n}\n\nsetCheckerBoard();\n\nfunction checkColorsTurn(boardNumber: number, target: EventTarget) {\n  const boardCoordinates = boardNumberToMatrix(boardNumber);\n  if (redTurn && board[boardCoordinates[0]][boardCoordinates[1]] === 1) {\n    selectedSquare = document.getElementById(boardNumber.toString());\n    moveChoice(boardCoordinates[0], boardCoordinates[1], target, 1);\n  } else if (\n    !redTurn &&\n    board[boardCoordinates[0]][boardCoordinates[1]] === -1\n  ) {\n    selectedSquare = document.getElementById(boardNumber.toString());\n    moveChoice(boardCoordinates[0], boardCoordinates[1], target, -1);\n  } else {\n    return;\n  }\n}\n\nfunction moveChoice(\n  yCoord: number,\n  xCoord: number,\n  target: EventTarget,\n  colorNumber: number\n): void {\n  document.querySelectorAll(\".highlight\").forEach((square) => {\n    square.classList.remove(\"highlight\");\n  });\n\n  const oppositeColor = colorNumber * -1;\n  if (colorNumber === 1 || target.classList.contains(\"king\")) {\n    if (board[yCoord + 1]) {\n      if (board[yCoord + 1][xCoord - 1] === 0) {\n        const id = arrayCoordinatesToId(yCoord + 1, xCoord - 1);\n        if (document.getElementById(id)) {\n          document.getElementById(id).classList.add(\"highlight\");\n        }\n      } else if (\n        board[yCoord + 2] &&\n        board[yCoord + 1][xCoord - 1] === oppositeColor &&\n        board[yCoord + 2][xCoord - 2] === 0\n      ) {\n        const id = arrayCoordinatesToId(yCoord + 2, xCoord - 2);\n        document.getElementById(id).classList.add(\"highlight\");\n      }\n      if (board[yCoord + 1][xCoord + 1] === 0) {\n        const id = arrayCoordinatesToId(yCoord + 1, xCoord + 1);\n        document.getElementById(id).classList.add(\"highlight\");\n      } else if (\n        board[yCoord + 2] &&\n        board[yCoord + 1][xCoord + 1] === oppositeColor &&\n        board[yCoord + 2][xCoord + 2] === 0\n      ) {\n        const id = arrayCoordinatesToId(yCoord + 2, xCoord + 2);\n        document.getElementById(id).classList.add(\"highlight\");\n      }\n    }\n  }\n  if (colorNumber === -1 || target.classList.contains(\"king\")) {\n    if (board[yCoord - 1]) {\n      if (board[yCoord - 1][xCoord - 1] === 0) {\n        const id = arrayCoordinatesToId(yCoord - 1, xCoord - 1);\n        document.getElementById(id).classList.add(\"highlight\");\n      } else if (\n        board[yCoord - 2] &&\n        board[yCoord - 1][xCoord - 1] === oppositeColor &&\n        board[yCoord - 2][xCoord - 2] === 0\n      ) {\n        const id = arrayCoordinatesToId(yCoord - 2, xCoord - 2);\n        document.getElementById(id).classList.add(\"highlight\");\n      }\n\n      if (board[yCoord - 1][xCoord + 1] === 0) {\n        const id = arrayCoordinatesToId(yCoord - 1, xCoord + 1);\n        document.getElementById(id).classList.add(\"highlight\");\n      } else if (\n        board[yCoord - 2] &&\n        board[yCoord - 1][xCoord + 1] === oppositeColor &&\n        board[yCoord - 2][xCoord + 2] === 0\n      ) {\n        const id = arrayCoordinatesToId(yCoord - 2, xCoord + 2);\n        document.getElementById(id).classList.add(\"highlight\");\n      }\n    }\n  }\n}\n\nfunction checkContinuedMove(\n  yCoord: number,\n  xCoord: number,\n  colorNumber: number\n) {\n  const oppositeColor = colorNumber * -1;\n\n  //check if piece being moved is a king\n  const selectedElement = document.getElementById(selected.toString())\n  const pieceisKing = selectedElement.children[0].classList.contains('king')\n\n  const squareId = parseInt(arrayCoordinatesToId(yCoord, xCoord));\n  if (colorNumber === 1 || pieceisKing) {\n    // check if move to top Left still\n    if (\n      board[yCoord + 2] &&\n      board[yCoord + 1][xCoord - 1] === oppositeColor &&\n      board[yCoord + 2][xCoord - 2] === 0\n    ) {\n      const id = arrayCoordinatesToId(yCoord + 2, xCoord - 2);\n      document.getElementById(id).classList.add(\"highlight\");\n      mustMove = squareId;\n    }\n    // check if move to top Right still\n    if (\n      board[yCoord + 2] &&\n      board[yCoord + 1][xCoord + 1] === oppositeColor &&\n      board[yCoord + 2][xCoord + 2] === 0\n    ) {\n      const id = arrayCoordinatesToId(yCoord + 2, xCoord + 2);\n      document.getElementById(id).classList.add(\"highlight\");\n      mustMove = squareId;\n    }\n  }\n\n  if (colorNumber === -1 || pieceisKing) {\n    // check if move to bottom Left still\n    if (\n      board[yCoord - 2] &&\n      board[yCoord - 1][xCoord - 1] === oppositeColor &&\n      board[yCoord - 2][xCoord - 2] === 0\n    ) {\n      const id = arrayCoordinatesToId(yCoord - 2, xCoord - 2);\n      document.getElementById(id).classList.add(\"highlight\");\n      mustMove = squareId;\n\n    }\n    // check if move to bottom Left still\n    if (\n      board[yCoord - 2] &&\n      board[yCoord - 1][xCoord + 1] === oppositeColor &&\n      board[yCoord - 2][xCoord + 2] === 0\n    ) {\n      const id = arrayCoordinatesToId(yCoord - 2, xCoord + 2);\n      document.getElementById(id).classList.add(\"highlight\");\n      mustMove = squareId;\n    }\n  }\n}\n"]}