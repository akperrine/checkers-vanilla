{"mappings":"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","sources":["src/index.ts"],"sourcesContent":["const table = document.querySelector(\"#table\");\nconst scoreBox = document.querySelector(\".score-box\");\n\nconst gameOver = false;\nconst redTurn = true;\nconst scoreBlack = 12;\nconst scoreRed = 12;\nconst board = [\n  [0, 1, 0, 1, 0, 1, 0, 1],\n  [1, 0, 1, 0, 1, 0, 1, 0],\n  [0, 1, 0, 1, 0, 1, 0, 1],\n  [-1, 0, 0, 0, 0, 0, -1, 0],\n  [0, 0, 0, 0, 0, 0, 0, 0],\n  [-1, 0, -1, 0, -1, 0, -1, 0],\n  [0, -1, 0, -1, 0, -1, 0, -1],\n  [-1, 0, -1, 0, -1, 0, -1, 0],\n];\n\nfunction updateScore() {\n  if (scoreBox) {\n    return (scoreBox.innerHTML = `\n    <span>Black Pieces: ${scoreBlack}</span>\n    <span>Red Pieces: ${scoreRed}</span>\n    `);\n  }\n}\n\nfunction boardNumberToMatrix(boardNumber: number): number[] {\n  const firstArrayIndex = Math.floor(boardNumber / 8);\n  const secondArrayIndex = boardNumber % 8;\n  return [firstArrayIndex, secondArrayIndex];\n  // return board[firstArrayIndex][secondArrayIndex];\n}\n\nfunction clickablePiece() {\n  return document.querySelectorAll(\".checker\").forEach((piece: Element) => {\n    const pieceWithChecker = piece.closest(\"td\");\n    if (pieceWithChecker) {\n      piece.addEventListener(\"click\", (event) => {\n        const boardNumber = parseInt(pieceWithChecker.id);\n        if (event.target) {\n          const target = event.target;\n          return checkColorsTurn(boardNumber, target);\n        }\n      });\n    }\n  });\n}\n\nfunction setCheckerBoard(): void {\n  for (let i = 0; i < 8; i++) {\n    for (let j = 0; j < 8; j++) {\n      if (board[i][j] === 1) {\n        setCheckerSquare(i, j, \"red\");\n      } else if (board[i][j] === -1) {\n        setCheckerSquare(i, j, \"black\");\n      }\n    }\n  }\n  clickablePiece();\n  updateScore();\n}\n\nfunction arrayCoordinatesToId(y: number, x: number): string {\n  return (y * 8 + x).toString();\n}\n\nfunction setCheckerSquare(indexY: number, indexX: number, color: string): void {\n  const idNumber = arrayCoordinatesToId(indexY, indexX);\n  const currentCell = document.getElementById(idNumber);\n  if (currentCell) {\n    currentCell.innerHTML = `<div class=\"checker ${color}-checker king\"></div>`;\n  }\n}\n\nsetCheckerBoard();\n\nfunction checkColorsTurn(boardNumber: number, target: EventTarget) {\n  const boardCoordinates = boardNumberToMatrix(boardNumber);\n  if (redTurn && board[boardCoordinates[0]][boardCoordinates[1]] === 1) {\n    moveChoice(boardCoordinates[0], boardCoordinates[1], target, 1);\n  } else if (\n    !redTurn &&\n    board[boardCoordinates[0]][boardCoordinates[1]] === -1\n  ) {\n    moveChoice(boardCoordinates[0], boardCoordinates[1], target, -1);\n  } else {\n    return;\n  }\n}\n\nfunction moveChoice(\n  yCoord: number,\n  xCoord: number,\n  target: EventTarget,\n  colorNumber: number\n): void {\n  // console.log(board[xCoord], event);\n  // const downOneLeft = board[yCoord + 1][xCoord - 1];\n  // const downTwoLeft = board[yCoord + 2][xCoord - 1];\n  // const downOneRight = board[yCoord + 1][xCoord + 1];\n  // const downTwoRight = board[yCoord + 2][xCoord + 1];\n\n  // const UpOneLeft = board[yCoord - 1][xCoord - 1];\n  // const upTwoLeft = board[yCoord - 2][xCoord - 1];\n  // const upOneRight = board[yCoord - 1][xCoord + 1];\n  // const upTwoRight = board[yCoord - 2][xCoord + 1];\n\n  const oppositeColor = colorNumber * -1;\n\n  if (target.classList.contains(\"king\")) {\n    console.log(\"king\");\n  }\n  // if (downOneLeft === 0 && colorNumber === 1) {\n  //   console.log(\"hi\");\n  //   console.log(target.classList.contains(\"king\"));\n  //   // document.getElementById()\n  // }\n}\n"],"names":[],"version":3,"file":"index.377278e2.js.map","sourceRoot":"/__parcel_source_root/"}