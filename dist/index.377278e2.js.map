{"mappings":"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","sources":["src/index.ts"],"sourcesContent":["const table = document.querySelector(\"#table\");\n\nconst gameOver = false;\nconst blackTurn = false;\nconst redTurn = true;\nconst scoreBlack = 12;\nconst scoreRed = 12;\nconst board = [\n  [0, 1, 0, 1, 0, 1, 0, 1],\n  [1, 0, 1, 0, 1, 0, 1, 0],\n  [0, 1, 0, 1, 0, 1, 0, 1],\n  [0, 0, 0, 0, 0, 0, 0, 0],\n  [0, 0, 0, 0, 0, 0, 0, 0],\n  [-1, 0, -1, 0, -1, 0, -1, 0],\n  [0, -1, 0, -1, 0, -1, 0, -1],\n  [-1, 0, -1, 0, -1, 0, -1, 0],\n];\n\nfunction boardNumberToMatrix(boardNumber: number): number {\n  const firstArrayIndex = Math.floor(boardNumber / 8);\n  const secondArrayIndex = boardNumber % 8;\n  return board[firstArrayIndex][secondArrayIndex];\n}\n\nfunction clickablePiece() {\n  return document.querySelectorAll(\".checker\").forEach((piece): void => {\n    if (piece) {\n      const pieceWithChecker = piece.closest(\"td\");\n      if (pieceWithChecker) {\n        piece.addEventListener(\"click\", () => {\n          const boardNumber = parseInt(pieceWithChecker.id);\n          console.log(\n            boardNumber,\n            `firstArrayIndex: ${boardNumberToMatrix(boardNumber)}`\n          );\n        });\n      }\n    }\n  });\n}\n\nfunction setCheckerBoard(): void {\n  for (let i = 0; i < 8; i++) {\n    for (let j = 0; j < 8; j++) {\n      if (board[i][j] === 1) {\n        setCheckerSquare(i, j, \"red\");\n      } else if (board[i][j] === -1) {\n        setCheckerSquare(i, j, \"black\");\n      }\n    }\n  }\n  clickablePiece();\n}\n\nfunction arrayCoordinatesToId(y: number, x: number): string {\n  return (y * 8 + x).toString();\n}\n\nfunction setCheckerSquare(indexY: number, indexX: number, color: string): void {\n  const idNumber = arrayCoordinatesToId(indexY, indexX);\n  const currentCell = document.getElementById(idNumber);\n  if (currentCell) {\n    currentCell.innerHTML = `<div class=\"checker ${color}-checker\"></div>`;\n  }\n}\n\n// function checkPieceInSquare(event: MouseEvent) {\n//   console.log(event.target);\n// }\n\nsetCheckerBoard();\n"],"names":[],"version":3,"file":"index.377278e2.js.map","sourceRoot":"/__parcel_source_root/"}